1Ô∏è‚É£ What is std::function<>?
üîπ std::function<> is a general-purpose function wrapper that can store:
==> Lambda functions
==> Function pointers
==> Functor (Function objects)
==> Member functions (with std::bind)
==> Any callable entity with a matching signature

üîπ Basic Syntax:
std::function<return_type(parameter_types)> func_name;
---------------------------------------------------------------------------
2Ô∏è‚É£ Why Use std::function<>?
Without std::function<>, we would be limited to using function pointers or lambdas directly. std::function<> allows:

‚úÖ Flexibility: You can change the function dynamically.
‚úÖ Uniformity: Works with lambdas, function pointers, functors, and member functions.
‚úÖ Storing Callables in Containers: Can store multiple function types in STL containers like std::vector.
‚úÖ Callbacks: Used in event-driven programming.
---------------------------------------------------------------------------
4Ô∏è‚É£ Summary: When to Use std::function<>?
------------------------------------------
Feature	                                       std::function<>
-----------------------------------------------------------------
Store function pointers                           ‚úÖ Yes
Store lambda functions                            ‚úÖ Yes
Store functors (objects with operator())        	‚úÖ Yes
Store member functions (std::bind)	              ‚úÖ Yes
Change function dynamically	                      ‚úÖ Yes
Useful for callbacks	                            ‚úÖ Yes
---------------------------------------------------------------------------
